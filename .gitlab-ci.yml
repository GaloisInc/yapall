stages:
  - cache
  - format
  - test

# Shared Rust dependency cache configuration
cache: &global_cache
  key:
    files: [Cargo.lock]
    prefix: "rust-$RUST"
  paths:
    - target/
  policy: pull

# Update the Rust dependency cache on pushes to main
update-cache:
  stage: cache
  image: rust:${RUST}
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  parallel:
    matrix:
      - RUST: "1.68"
      - RUST: "1.67"
  cache:
    <<: *global_cache
    policy: push
  script:
  - cargo build --locked --workspace
  - cargo test --locked --workspace --no-run

format:
  stage: format
  image: rust:latest
  rules:
  - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH 
  - if: $CI_PIPELINE_SOURCE == "push" 
    changes: 
    - .gitlab-ci.yml
    - ./**/*.rs  
  script:
  - rustup component add rustfmt
  - cargo fmt --check --all

test:
  stage: test
  image: rust:${RUST}
  parallel:
    matrix:
      - RUST: "1.68"
      - RUST: "1.67"
  cache:
    <<: *global_cache
  variables:
    UBUNTU_NAME: bullseye
    LLVM_MAJOR_VERSION: "14"
  script:
  - |
    wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    echo "deb http://apt.llvm.org/${UBUNTU_NAME}/ llvm-toolchain-${UBUNTU_NAME}-${LLVM_MAJOR_VERSION} main" | tee /etc/apt/sources.list.d/llvm.list
    apt-get update
    apt-get --yes install --no-install-recommends \
      llvm-${LLVM_MAJOR_VERSION} \
      llvm-${LLVM_MAJOR_VERSION}-dev
    
  - rustup component add clippy
  # TODO:
  # - cargo clippy --workspace -- --deny warnings
  - cargo clippy --workspace
  # TODO:
  # - env RUSTFLAGS="@$PWD/rustc-flags" cargo build --locked --workspace
  # - env RUSTFLAGS="@$PWD/rustc-flags" cargo test --locked --workspace
